version: "3.3"

services:

  traefik:
    image: "traefik:v2.2"
    ports:
     - "80:80"
     - "8080:8080"
    command:
      - "--api.debug=true"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=true" #si esta en false, ignora los containers que no tengan traefik.enable=true
      - "--providers.docker.network=default"
      - "--providers.docker.useBindPortIP=true"
      - "--entrypoints.web.address=:80"
    deploy:
      placement:
        constraints: [node.role == manager]
      mode: replicated
      replicas: 1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - default
      - traefik-net

  chile:
    image: "backend-service"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.chile.rule=HeadersRegexp(`country`, `cl`) && PathPrefix(`/v1`)"
        - "traefik.http.services.chile-service.loadbalancer.server.port=8080"
      resources:
        limits:
         memory: 128M
    networks:
      - default

  peru:
    image: "backend-service"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.http.routers.peru.rule=PathPrefix(`/`)"
        - "traefik.http.services.peru-service.loadbalancer.server.port=8080"
      resources:
        limits:
         memory: 128M
    networks:
      - default

networks:
  default:
  traefik-net:
    external: true
      